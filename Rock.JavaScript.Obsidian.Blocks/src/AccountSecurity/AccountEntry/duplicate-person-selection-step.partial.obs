<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <Alert v-if="options.caption" alertType="warning" v-html="options.caption"></Alert>

    <SimpleGrid :items="options.duplicatePeople">
        <template #header>
            <tr>
                <th>You?</th>
                <th>Name</th>
                <th>Gender</th>
                <th>Birth Day</th>
            </tr>
        </template>
        <template #row="{item}: {item: AccountEntryDuplicatePersonItemBag}">
            <tr>
                <td><input v-model="internalModelValue" :disabled="disabled" name="DuplicatePerson" type="radio" :value="item" /></td>
                <td>{{ item.fullName }}</td>
                <td>{{ item.gender }}</td>
                <td>{{ formatBirthDate(item.birthDate) }}</td>
            </tr>
        </template>
    </SimpleGrid>

    <div class="radio">
        <label>
            <input v-model="internalModelValue" :disabled="disabled" name="DuplicatePerson" type="radio" :value="null" />
            <span class="label-text"><strong>None of these are me</strong></span>
        </label>
    </div>

    <div class="actions">
        <RockButton :btnType="btnTypeLink" :disabled="disabled" @click="onPreviousClicked">Previous</RockButton>
        <RockButton :btnType="btnTypePrimary" :disabled="disabled" @click="onNextClicked">Next</RockButton>
    </div>
</template>

<script setup lang="ts">
    import SimpleGrid from "./simple-grid.partial.obs";
    import Alert from "@Obsidian/Controls/alert.obs";
    import RockButton from "@Obsidian/Controls/rockButton";
    import { BtnType } from "@Obsidian/Enums/Controls/btnType";
    import { formatAspDate } from "@Obsidian/Utility/aspDateFormat";
    import { useVModelPassthrough } from "@Obsidian/Utility/component";
    import { RockDateTime } from "@Obsidian/Utility/rockDateTime";
    import { AccountEntryDuplicatePersonItemBag } from "@Obsidian/ViewModels/Blocks/AccountSecurity/AccountEntry/accountEntryDuplicatePersonItemBag";
    import { AccountEntryDuplicatePersonSelectionStepBag } from "@Obsidian/ViewModels/Blocks/AccountSecurity/AccountEntry/accountEntryDuplicatePersonSelectionStepBag";
    import { PropType, ref } from "vue";

    const props = defineProps({
        modelValue: {
            type: Object as PropType<AccountEntryDuplicatePersonItemBag | null>,
            required: false,
            default: null
        },
        disabled: {
            type: Boolean as PropType<boolean>,
            required: false,
            default: false
        },
        options: {
            type: Object as PropType<AccountEntryDuplicatePersonSelectionStepBag>,
            required: true
        }
    });

    const emit = defineEmits<{
        (e: "update:modelValue", value: AccountEntryDuplicatePersonItemBag | null): void,
        (e: "movePrevious"): void,
        (e: "personSelected"): void,
        (e: "noPersonSelected"): void
    }>();

    //#region Values

    const internalModelValue = useVModelPassthrough(props, "modelValue", emit);

    const btnTypeLink = ref(BtnType.Link);
    const btnTypePrimary = ref(BtnType.Primary);

    //#endregion

    //#region Event Handlers

    /**
     * Event handler for the next button being clicked.
     */
    function onNextClicked(): void {
        if (internalModelValue.value) {
            emit("personSelected");
        }
        else {
            emit("noPersonSelected");
        }
    }

    /**
     * Event handler for the previous button being clicked.
     */
    function onPreviousClicked(): void {
        emit("movePrevious");
    }

    //#endregion

    //#region Functions

    /**
     * Formats an ISO date to a friendly birth date.
     *
     * @param birthDate The ISO date to format.
     */
    function formatBirthDate(birthDate?: string | null | undefined): string {
        if (!birthDate) {
            return "";
        }

        const rockBirthDate = RockDateTime.parseISO(birthDate);

        if (!rockBirthDate) {
            return "";
        }

        return formatAspDate(rockBirthDate, "MMMM d");
    }

    //#endregion
</script>