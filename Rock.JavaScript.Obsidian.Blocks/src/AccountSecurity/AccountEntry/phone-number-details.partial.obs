<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->
<template>
    <PhoneNumberBox :disabled="disabled" :label="modelValue.label" v-model="internalPhoneNumber" :rules="phoneNumberRules"></PhoneNumberBox>
    <InlineCheckBox :disabled="disabled" label="SMS" v-model="internalIsSmsEnabled"></InlineCheckBox>
    <InlineCheckBox :disabled="disabled" label="Unlisted" v-model="internalIsUnlisted"></InlineCheckBox>
</template>

<script setup lang="ts">
    import InlineCheckBox from "@Obsidian/Controls/inlineCheckBox";
    import PhoneNumberBox from "@Obsidian/Controls/phoneNumberBox";
    import { AccountEntryPhoneNumberBag } from "@Obsidian/ViewModels/Blocks/AccountSecurity/AccountEntry/accountEntryPhoneNumberBag";
    import { computed, PropType } from "vue";


    const props = defineProps({
        modelValue: {
            type: Object as PropType<AccountEntryPhoneNumberBag>,
            required: true
        },
        disabled: {
            type: Boolean as PropType<boolean>,
            required: false,
            default: false
        }
    });

    const emit = defineEmits<{
        (e: "update:modelValue", value: AccountEntryPhoneNumberBag): void
    }>();

    //#region Computed Values

    const internalPhoneNumber = computed<string>({
        get() {
            return props.modelValue.phoneNumber ?? "";
        },
        set(newValue: string) {
            emit("update:modelValue", { ...props.modelValue, phoneNumber: newValue });
        }
    });

    const internalIsSmsEnabled = computed<boolean>({
        get() {
            return props.modelValue.isSmsEnabled;
        },
        set(newValue: boolean) {
            emit("update:modelValue", { ...props.modelValue, isSmsEnabled: newValue });
        }
    });

    const internalIsUnlisted = computed<boolean>({
        get() {
            return props.modelValue.isUnlisted;
        },
        set(newValue: boolean) {
            emit("update:modelValue", { ...props.modelValue, isUnlisted: newValue });
        }
    });

    const phoneNumberRules = computed<string>(() => props.modelValue.isRequired ? "required" : "");

    //#endregion
</script>